# GitHub Action for building and deploying the Necromunda Memgraph docs to GitHub Pages
name: Deploy Necromunda Memgraph Docs to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'docs/**'
      - 'queries/**'
      - 'config.toml'
      - '.github/workflows/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          # Enable Pages site even if it doesn't exist yet
          enablement: true
          
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      - name: Create Hugo configuration if it doesn't exist
        run: |
          if [ ! -f "config.toml" ] && [ ! -f "hugo.toml" ]; then
            cat > config.toml << EOF
          baseURL = "/"
          languageCode = "en-us"
          title = "Necromunda Memgraph Documentation"
          theme = "hugo-book"
          
          [params]
            BookMenuBundle = "/menu"
            BookSection = "docs"
            BookRepo = "https://github.com/yourusername/necromunda_memgraph"
            BookEditPath = "edit/main"
          
          [markup.goldmark.renderer]
            unsafe = true
          EOF
            
            # Hugo will fetch the theme via modules, no need to clone manually
            # mkdir -p themes/hugo-book
            # git clone --depth 1 https://github.com/alex-shpak/hugo-book themes/hugo-book || echo "Theme already exists"
          fi
      
      - name: Build with Hugo
        env:
          # Use a cache directory for Hugo to speed up builds
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          # Create content directory structure if needed
          mkdir -p content
          
          # If docs/ is not already in content/, copy it
          if [ ! -d "content/docs" ]; then
            mkdir -p content/docs
            cp -r docs/* content/docs/
          fi
          
          # Create a custom config file that overrides the baseURL with the proper GitHub Pages URL
          cat > config.github-pages.toml << EOF
          baseURL = "${{ steps.pages.outputs.base_url }}/"
          EOF
          
          # Run Hugo build with properly configured baseURL
          hugo --config config.toml,config.github-pages.toml --minify
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
